#include <stdio.h>
#include <iostream>
#include "library.h"

int main(int argc, char** argv) {
    FILE* file = fopen(argv[1], "w+");
    int page_size = 10000;
    Heapfile *heap = new Heapfile();

    init_heapfile(heap, page_size, file);
    int index = 0;
    int freespace = 0;
    fseek(file, sizeof(int), SEEK_SET);
    for (int i = 0; i < number_of_pages_per_directory_page(page_size); ++i) {
        fread(&index, sizeof(int), 1, file);
        fread(&freespace, sizeof(int), 1, file);
    }

    PageID new_pid = alloc_page(heap);
    std::cout << "new page id: " << new_pid << "\n";

    /*
    fseek(file, 0, SEEK_SET);
    search_directory(heap, new_pid);

    int current_location = ftell(file);
    std::cout << "found location of new page: " << current_location << "\n";
    freespace = 0;
    fread(&freespace, sizeof(int), 1, file);
    std::cout << "freespace of new page " << freespace << "\n";
    */

    Page page;
    init_fixed_len_page(&page, page_size, NUM_ATTRIBUTES * ATTRIBUTE_SIZE);
    Record *r1 = new Record;

    char* line1 = "WSVKKTJDQKZLRQQPAGYUXICCEAFXRJDQKWVXSQVPQIAJKYEIJHSZTGUVRBBBRTMULYVARLOPZSWIUITGSNMLAKBSENXVQNVCUOCEOBDRGOUFQEWAJVSYQEMWVIGSXRMBODNASTCHLZOFUQJHCHUMAKWRAGHZKIHMADNLMBTUHLXHWFJKOAIRGTNQGWTCTQJYOCCHOXIVQWENFRMAGDWBFRRQJYDJTIKNJDUYILSJJDYOAYNLDNIQGJSUCRQLTTQHBJTIVACXRTZZTJIRDVTSYFORCPARCETTTYFBNSWUZNIUPVZBOPAFYNUGJPFQQHIYFIDEYUMBYQZYDOTQLJCZHCJTSHXLPOCAYFJBNTDQBZMHEJJRZKCAWIYUBMBASRPKLDUGQRXFRFSRUUMDYGXNYKRCZITMTDYXSIYEGYASAFJHTDURULYCGWYCMDGVFKJRIKXPTYTUECKFMNUJEAFBDAEPCUALKMPNOZXFIICDATNUSABSTKGBDAYXIELEVWVSBODPECZJKYVSTJAAMKIWNKXJQLOJPCNVDAOMFMFCJKNCOEINVJSTWWHBKYHABQQMGTHNDBPBWLYQRGSPEPZPBGKKXKLMYMXUVYDRRYGOVJKOKRLXMUCLDBXGJPCVWHYAVNLCKNFGCAUMJSETNURYBRYKWJEVBKVBJZCHTMHXNENYCCDNRYFKCFFBTXFDOYWBAVKDQHPDRAIXQQOGOXCTONAJBUCJOTQKRPUARACRDCBBAPEMOQTDOGHMMQUNNEOZDUHLQKQRMRMTAFALYWTPYKTPEJZFXEGNLCLSOFXAJMTOWPKIFVJMPKVPOQANGDVFYLRUMSYPSCPEXVSHYYUYISABMQOGXLXEVEDVKDPFAEKWOQDHNIPAYUHDTSSCQUPBUDZSSTBPRYPQZXBVBVJYUTLNMOSYGGHIZKTRRGLEODLFCZQQGMWOPCEJPCFYTTTQBTSUNYCWDAZUTBTLQJYKLVSCGLDVXQBYQBKXGDPU";
    char* line2 = "AKSXZBDREHFBVOUWGVIKHAKXFSDYBWLIYWJJLVVJXFEJSPFWFZSLSRSFJQWYMSNKKBRYFWBUWUEUJARNXXANZFQVWPXOOCWBQLUHFZEZZFMMOKXSHADIFSMXBLFYYZDWPYURQIOMAUCGVNQIQAXXTSLBTRKDSVXXZHJRJSAVRVHRPWWPYQWUJMFOFOCLKFIOPSZWGLOQQNKCDPLJHDIMVYXODYRQQLOZSFCTBTQXIQAYIHNOLEEOTSQRKRWPVKZYOBSOGEQXWUDETHLIFRCQSVCSYSAJTMLKFASHNJABSTIFRRSQASAYXZOBSGCTIYMBEILQAPHFPYBCUYTMLYLCBENOBEFGJHAZVBCKXEKNDYBLYKHYGCIGLNOMVZJGNPOWBRYZWNMLANXUYMYJHLWFYNLENVFATIHYEIISVSBOFHEVNTTGCJNWMHTPUJSYDIGAGBXXLWXBARKEHELBTLFMGYPBEKJBXTWTCNYBJOATLZRAZFKZEGSEIGZEYIDQAANSZHHCUXGPTQUOUXDZVRRTSXVCYUUVJMHEQUJFVPQXWOYMVSRIMWXXJMAQRBFRVFFQADWTUSQUBGEGOAXVSNTUHVDDOUBUDDFJKFPCUXGXDQWDEHITADZJYSMNXKKDSAKTCLGTNUMPNSGWXXZUYXIJEQLTXUVSBGJOLTJAFOQDATLOBRXGFNPEEAMGSZNHSCUGUZOIEJLPRXSOWGKSFHNKUOJSRWAXGACNLEZTHGCDFXTCDEZVJSAJHNCUSZEGPYIKLGISPOZXLJWQBUVWVQZPEYVLQADSVKDCKKBOQYMKPANHSLOJWLRFIHDWRKUFMFHXYODRCCRJDNBPNXJLEZSIZTUNYMOJWMNRYHCJYYIVQOLLTASBKESWUVBLRDKRSVDTOPHMRQYIOCGBRFNNYDJTYMOAHVDFAWYXCWERTRRGQXIKQMIKVUPCZPTMJDFJXYTHBRHUWKDAXCSDUMFAFUEOEKEWKHEUSNNQTTJLKNEE";

    fixed_len_read(line1, NUM_ATTRIBUTES * ATTRIBUTE_SIZE, r1);

    char buf[page_size];
    int slot_index = add_fixed_len_page(&page, r1);
    write_fixed_len_page(&page, slot_index, r1);

    delete r1;

    Record *r2 = new Record;
    fixed_len_read(line2, NUM_ATTRIBUTES * ATTRIBUTE_SIZE, r2);
    slot_index = add_fixed_len_page(&page, r2);
    write_fixed_len_page(&page, slot_index, r2);


    // int buf_size = page.page_size * NUM_ATTRIBUTES * ATTRIBUTE_SIZE;

    std::vector<Record> *page_data = page.data;
    for (int i = 0; i < fixed_len_page_capacity(&page); i++) {
        fixed_len_write(&page_data->at(i), buf);
    }
    std::cout << buf << "\n";

    write_page(&page, heap, new_pid);
    delete r2;


    fclose(file);
    return 0;
}
